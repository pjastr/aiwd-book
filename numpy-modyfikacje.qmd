# Modyfikacja kształtu i rozmiaru


  
```{python}
#| echo: true
import numpy as np

print("a")
a = np.array([[3, 4, 5], [-3, 4, 8], [3, 2, 9]])
print(a)
print("b")
b = np.reshape(a, (1, 9))
print(b)
print("c")
c = a.reshape(9)
print(c)

```

```{python}
#| echo: true
import numpy as np

print("a")
a = np.array([[3, 4, 5], [-3, 4, 8], [3, 2, 9]])
print(a)
print("d")
d = a.flatten()
print(d)
print("e")
e = a.ravel()
print(e)
print("f")
f = np.ravel(a)
print(f)

```

```{python}
#| echo: true
import numpy as np

print("g")
g = [[1, 3, 4]]
print(g)
print("h")
h = np.squeeze(g)
print(h)
print("i")
i = a.T
print(i)
print("j")
j = np.transpose(a)
print(j)

```

```{python}
#| echo: true
import numpy as np

print("h")
h = [3, -4, 5, -2]
print(h)
print("k")
k = np.hstack((h, h, h))
print(k)
print("l")
l = np.vstack((h, h, h))
print(l)
print("m")
m = np.dstack((h, h, h))
print(m)

```

```{python}
#| echo: true
import numpy as np

a = np.array([[1, 2], [3, 4]])
b = np.array([[5, 6]])
print("r1")
r1 = np.concatenate((a, b))
print(r1)
print("r2")
r2 = np.concatenate((a, b), axis=0)
print(r2)
print("r3")
r3 = np.concatenate((a, b.T), axis=1)
print(r3)
print("r4")
r4 = np.concatenate((a, b), axis=None)
print(r4)

```

```{python}
#| echo: true
import numpy as np

a = np.array([[1, 2], [3, 4]])
print("r1")
r1 = np.resize(a, (2, 3))
print(r1)
print("r2")
r2 = np.resize(a, (1, 4))
print(r2)
print("r3")
r3 = np.resize(a, (2, 4))
print(r3)

```

```{python}
#| echo: true
import numpy as np

a = np.array([[1, 2], [3, 4]])
b = np.array([[5, 6]])
print("r1")
r1 = np.append(a, b)
print(r1)
print("r2")
r2 = np.append(a, b, axis=0)
print(r2)

```

```{python}
#| echo: true
import numpy as np

a = np.array([[1, 2], [3, 7]])
print("r1")
r1 = np.insert(a, 1, 4)
print(r1)
print("r2")
r2 = np.insert(a, 2, 4)
print(r2)
print("r3")
r3 = np.insert(a, 1, 4, axis=0)
print(r3)
print("r4")
r4 = np.insert(a, 1, 4, axis=1)
print(r4)

```

```{python}
#| echo: true
import numpy as np

a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
print("r1")
r1 = np.delete(a, 1, axis=1)
print(r1)
print("r2")
r2 = np.delete(a, 2, axis=0)
print(r2)

```

**Ćwiczenia:** (`ex5.py`)

1. Rozważ tablicę jednowymiarową  
   $$A = \begin{bmatrix}1 & 2 & 3 & 4 & 5 & 6\end{bmatrix}.$$  
   Przekształć ją tak, aby uzyskać tablicę dwuwymiarową o kształcie $2 \times 3$.

2. Mając tablicę dwuwymiarową  
   $$B = \begin{bmatrix}1 & 2 \\ 3 & 4 \\ 5 & 6\end{bmatrix},$$  
   uzyskaj jednowymiarowy "widok" jej elementów bez zmiany w danych źródłowych.


3. Rozważ tablicę  
   $$D = \begin{bmatrix}1 & 2 & 3 \\ 4 & 5 & 6\end{bmatrix}.$$  
   Zmień jej orientację tak, aby wiersze stały się kolumnami, a kolumny wierszami.

4. Mając dwie tablice  
   $$E_1 = \begin{bmatrix}1 & 2 & 3\end{bmatrix}, \quad E_2 = \begin{bmatrix}4 & 5 & 6\end{bmatrix},$$  
   połącz je w poziomie, tworząc jedną tablicę.

5. Dwie tablice  
   $$F_1 = \begin{bmatrix}1 & 2 & 3\end{bmatrix}, \quad F_2 = \begin{bmatrix}4 & 5 & 6\end{bmatrix},$$  
   połącz w pionie, aby uzyskać tablicę o kształcie $2 \times 3$.

6. Dla tablicy  
   $$G = \begin{bmatrix}1 & 2 & 3 \\ 4 & 5 & 6\end{bmatrix},$$  
   zmień jej rozmiar tak, aby stała się tablicą jednowymiarową o 4 elementach. Pozostałe elementy usuń.

7. Mając tablicę  
   $$H = \begin{bmatrix}10 & 20 & 30 \\ 40 & 50 & 60 \\ 70 & 80 & 90\end{bmatrix},$$  
   usuń drugą kolumnę, otrzymując tablicę $3 \times 2$.

8. Rozważ tablicę  
   $$I = \begin{bmatrix}1 & 2 \\ 3 & 4 \\ 5 & 6 \\ 7 & 8\end{bmatrix},$$  
   zmień jej kształt tak, aby uzyskać tablicę $2 \times 4$.

9. Mając tablicę  
    $$J = \begin{bmatrix}1 & 2 & 3 & 4\end{bmatrix},$$  
    przekształć ją w tablicę dwuwymiarową $2 \times 2$, a następnie "spłaszcz" ją z powrotem do postaci jednowymiarowej.

